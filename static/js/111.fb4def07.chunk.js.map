{"version":3,"file":"static/js/111.fb4def07.chunk.js","mappings":"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","sources":["../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","Contact.jsx"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React, {useState, useEffect}  from \"react\"\nimport emailjs from '@emailjs/browser'\n\n\nconst Result = () => {\n  return (\n      <p>Your message has been successfully sent!</p>\n  )\n}\n\nconst Contact = () => {\n\n  const [ data, setData ] = useState({name:\"\", lastName:\"\", email:\"\", phone:\"\", message:\"\"})\n    const [ result, showResult ] = useState(false)\n    const [ validEmail, setValidEmail ] = useState(false)\n\n\n    useEffect(() => {\n       \n      const handleScroll = () => {\n        const scrollPosition = window.scrollY;\n        const parallaxElements = document.querySelectorAll('.parallax-element');\n  \n        parallaxElements.forEach((element) => {\n          const speed = element.dataset.speed;\n          element.style.transform = `translateY(${scrollPosition * speed}px)`;\n        });\n      };\n  \n      window.addEventListener('scroll', handleScroll);\n\n      return () => {\n        window.removeEventListener('scroll', handleScroll);\n      };\n    }, []);\n\n    const handleChange = (e) => {\n        const name = e.target.name\n        const value = e.target.value\n        setData({...data, [name]:value})\n    }\n\n    const twoCalls = (e) => {\n        onChangeValidEmail();\n        handleChange(e)\n    }\n\n    const onChangeValidEmail = () => {\n        let re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n        if (re.test(data.email)) {setValidEmail(false)}\n        else setValidEmail(true)\n    }\n    const EmailResponse = () => {\n        return (\n            <p>**Please enter a valid email**</p>\n        )\n    }\n\n    const sendMail = (e) => { //EmailJS documentation\n        e.preventDefault()\n\n        if (!validEmail) {\n        emailjs\n        .sendForm('service_0bd37pt', 'template_sasqli3', e.target, 'iauEh19za_KMIe1hP')\n        .then((result) => {\n            console.log(result.text);\n        }, (error) => {\n            console.log(error.text);\n        });\n        e.target.reset();\n        setData(\"\")\n        setData({message:\"\"})\n        showResult(true)\n    };\n}\n\nsetTimeout(() => {\n  showResult(false)\n}, 10000)\n\nreturn (\n  \n    <div className=\"z-10 min-h-screen text-3xl text-center bg-fixed bg-center bg-no-repeat bg-cover parallax-element bg-BG font-Raleway\">\n      <div className=\"fixed inset-0 flex flex-col items-center justify-center w-screen pt-48 overflow-x-hidden bg-color-BG bg-opacity-60\">\n        <h1 className=\"pt-32 text-5xl text-black lg:pt-72\">Contact <span className=\"text-black\">Us</span></h1>\n        <p className=\"pt-4 text-xs text-black sm:text-base lg:pt-10 lg:text-lg\">Please feel free to reach out with any questions here or email us at info@warmhospitalitygroup.com</p>\n\n        <div className=\"flex items-center justify-center m-4 lg:pt-20 lg:my-0 sm:w-11/12 sm:h-full \">\n            <div className=\"w-full\">\n                <form className=\"flex flex-col mx-auto text-center lg:pt-10\"  method=\"post\" onSubmit={sendMail}>\n                    <div className=\"flex mb-2 space-x-5 sm:space-x-10\">\n                        <div className=\"flex flex-col w-full\">\n                            <label className=\"flex text-xs text-black sm:text-base lg:text-lg\">First Name (required)</label>\n                            <input className=\"w-full p-2 text-xs border-2 border-black border-solid h-7 lg:h-auto sm:text-base lg:text-lg lg:mt-2\" \n                                type='text' name='name' id=\"\" onChange={handleChange} value={data.name} placeholder=\"First name\" required/>\n                        </div>\n                        <div className=\"flex flex-col w-full\">\n                            <label className=\"flex text-xs text-black sm:text-base lg:text-lg\">Last Name</label>\n                            <input className=\"w-full p-2 px-2 text-xs border-2 border-black border-solid sm:text-base h-7 lg:h-auto lg:text-lg lg:mt-2\" \n                                type=\"text\" name=\"lastName\" id=\"\" onChange={handleChange} value={data.lastName} placeholder=\"Last name\"></input>\n                        </div>\n                    </div>\n                    <label className=\"flex text-xs text-black sm:text-base lg:text-lg lg:pt-2\">Email (required)</label>\n                    <input className=\"flex text-xs border-2 h-7 border-black border-solid lg:mt-2 sm:text-base lg:px-[12px] lg:text-lg lg:h-auto lg:py-[8px] px-2\" \n                        type='email' name='email' id=\"\" onChange={twoCalls} value={data.email} placeholder=\"example@gmail.com\" required\n                    />\n                    <h2 className= \"text-base font-semibold text-center text-red-500 underline \">{validEmail ? <EmailResponse/> : null }</h2>\n                    <label className=\"flex text-xs text-black sm:text-base lg:text-lg lg:pt-2 \">Phone Number</label>\n                    <input className=\"flex text-xs border-2 h-7 border-black border-solid lg:mt-2 sm:text-base lg:px-[12px] lg:h-auto lg:text-lg lg:py-[8px] px-2\" \n                        type='phone' name='phone' id=\"\" onChange={handleChange} value={data.phone} placeholder=\"+1 (xxx)-xxx-xxxx\"\n                    />\n                    <label className=\"flex text-xs text-black lg:text-lg sm:text-base lg:pt-2\">Message (required)</label>\n                    <textarea className=\"flex px-2 mb-5 text-xs border-2 border-black border-solid sm:text-base lg:mb-8 lg:text-lg lg:mt-2\" \n                        name='message' id='' cols='30' rows='10' onChange={handleChange} value={data.message} placeholder=\"Enter message here...\" required\n                    />\n                    <div className=\"flex justify-center mb-0 lg:h-auto\">\n                        <button className=\"flex items-center justify-center w-48 text-base text-center text-white bg-black rounded-lg bt-black sm:text-lg hover:bg-white hover:text-black lg:w-20 lg:mb-4\" type='submit'>Send</button>\n                    </div>\n                    \n                    <h2 className= \"pt-5 text-lg\">{result ? <Result/> : null}</h2> \n                </form>  \n            </div>\n        </div>\n        </div>\n    </div>\n\n  )\n}\n\nexport default Contact"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","sendForm","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","Result","_jsx","children","Contact","setData","useState","name","lastName","email","phone","message","result","showResult","validEmail","setValidEmail","useEffect","handleScroll","scrollPosition","window","scrollY","querySelectorAll","element","speed","dataset","style","transform","concat","removeEventListener","handleChange","e","value","onChangeValidEmail","test","EmailResponse","setTimeout","className","_jsxs","method","onSubmit","preventDefault","emailjs","then","console","log","error","reset","type","id","onChange","placeholder","required","cols","rows"],"sourceRoot":""}